{"version":3,"file":"static/js/263.2250045e.chunk.js","mappings":"mUAaMA,EAAO,SAAH,GAAsE,IAAD,IAAhEC,EAAI,EAAJA,KAAMC,EAAY,EAAZA,aACpB,GAD6C,EAAXC,YAAiB,EAAJC,KAAkB,EAAZC,cACrBC,EAAAA,EAAAA,UAAS,KAAG,eAArCC,EAAQ,KAAEC,EAAW,MAE5BC,EAAAA,EAAAA,YAAU,WACTC,MAAMR,GACJS,MAAK,SAACC,GAAa,OAAKA,EAASC,MAAM,IACvCF,MAAK,SAACE,GACNL,EAAYK,EACb,GACF,GAAG,CAACX,IAEJ,IAmBIY,EAAqC,QAAhC,EAAGC,SAASC,eAAef,UAAK,aAA7B,EAA+BgB,YACvCC,EAAsC,QAAhC,EAAGH,SAASC,eAAef,UAAK,aAA7B,EAA+BkB,aAC5C,OACC,iBAAKC,GAAG,OAAOC,UAAU,OAAM,WAC9B,oBAAQA,UAAU,aAAaD,GAAG,sBAAsBE,QAvBrC,WACpB,IAAIC,EAAQ,iEAA6DtB,EAAI,gBAEhE,aAATA,IAAqBsB,EAAQ,iEAEjCb,MAAMa,GAAUZ,MAAK,SAAAC,GACXA,EAASY,OAAOb,MAAK,SAAAa,GAEjB,IAAMC,EAAUC,OAAOC,IAAIC,gBAAgBJ,GAEvCK,EAAQd,SAASe,cAAc,KACnCD,EAAME,KAAON,EACbI,EAAMG,SAAQ,UAAM/B,EAAI,QACX,aAATA,IAAqB4B,EAAMG,SAAW,mBACtDH,EAAMI,OACE,GACJ,GACP,EAMgF,WAC7E,iBAAKC,MAAM,6BAA6BpB,MAAM,KAAKI,OAAO,KAAKiB,QAAQ,YAAYC,YAAY,MAAMC,OAAO,UAAUC,KAAK,OAAOC,cAAc,QAAQC,eAAe,QAAO,WAC7K,iBAAMH,OAAO,OAAOI,EAAE,gBAAgBH,KAAK,UAC3C,iBAAMG,EAAE,gDACR,qBAAUC,OAAO,sBACjB,iBAAMC,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,WAEjC,eAAIzB,UAAU,kBAAiB,SAAY,aAATpB,EAAsB,KAAO,gBAEhE,SAAC,KAAS,CAAC8C,MAAO,CAAEjC,MAAOA,GAAgBkC,EAAAA,GAAmB9B,OAAQA,GAAiB+B,EAAAA,IAAqB5B,UAAU,YAAW,UAC3H,SAAC,IAAa,CAAC6B,WAAY,CAC/BC,KAAI,YAAM,EAAJC,KAA+C,IAAzCC,EAAM,EAANA,OAAQhC,EAAS,EAATA,UAAWiC,EAAQ,EAARA,SAAaC,GAAK,YAC1CC,EAAQ,iBAAiBC,KAAKpC,GAAa,IACjD,OAAQgC,GAAUG,GACjB,SAAC,KAAiB,QAClBF,SAAUI,OAAOJ,GAAUK,QAAQ,MAAO,IAE1CZ,MAAOa,EAAAA,EACPC,SAAUL,EAAM,GAChBM,OAAO,OACHP,KAGL,iCAAMlC,UAAWA,GAAekC,GAAK,aACnCD,IAGH,GAEDjC,UAAU,WAAW0C,cAAe,CAACC,EAAAA,GAAYC,cAAe,CAACC,EAAAA,GAAYZ,SAAU/C,QAI3F,EAEA,GAAe4D,EAAAA,EAAAA,MAAKnE,E","sources":["components/Desktop/Apps/File/File.tsx"],"sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\nimport \"styles/File.css\"\nimport ReactMarkdown from 'react-markdown'\nimport remarkGfm from \"remark-gfm\";\nimport rehypeRaw from \"rehype-raw\";\n\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\nimport {oneDark} from 'react-syntax-highlighter/dist/esm/styles/prism'\n\nimport { Scrollbar } from \"react-scrollbars-custom\";\nimport { IFile } from \"../../../../types\";\nimport { default_win_height, default_win_width } from \"../../../../consts\";\n\nconst File = ({name, content_path, spawnWindow, size, forcedUpdate}: IFile) => {\n\tconst [markdown, setMarkdown] = useState('');\n\n\tuseEffect(() => {\n\t\tfetch(content_path)\n\t\t\t.then((response: any) => response.text())\n\t\t\t.then((text) => {\n\t\t\t\tsetMarkdown(text);\n\t\t\t})\n\t}, [content_path]);\n\n\tconst downloadFile = (): void => {\n\t\tlet pdf_path = `https://lpellier.github.io/portfoliOS/project_subjects/${name}.subject.pdf`\n\t\t\n\t\tif (name === \"About me\") pdf_path = `https://lpellier.github.io/portfoliOS/project_subjects/CV.pdf`;\n\n\t\tfetch(pdf_path).then(response => {\n            response.blob().then(blob => {\n                // Creating new object of PDF file\n                const fileURL = window.URL.createObjectURL(blob);\n                // Setting various property values\n                let alink = document.createElement('a');\n                alink.href = fileURL;\n                alink.download = `${name}.pdf`;\n                if (name === \"About me\") alink.download = 'lpellier-cv.pdf';\n\t\t\t\talink.click();\n            })\n        })\n\t}\n\n\tlet width = document.getElementById(name)?.clientWidth;\n\tlet height = document.getElementById(name)?.clientHeight;\n\treturn (\n\t\t<div id=\"File\" className=\"file\">\n\t\t\t<button className=\"button-pdf\" id=\"button-pdf-download\" onClick={downloadFile}>\n\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" strokeWidth=\"1.5\" stroke=\"#F4615A\" fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n\t\t\t\t\t<path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t\t\t<path d=\"M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2\" />\n\t\t\t\t\t<polyline points=\"7 11 12 16 17 11\" />\n\t\t\t\t\t<line x1=\"12\" y1=\"4\" x2=\"12\" y2=\"16\" />\n\t\t\t\t</svg>\n\t\t\t\t<h1 className=\"button-pdf-text\" >{name === \"About me\" ? \"CV\" : \"Subject\"}</h1>\n\t\t\t</button>\n\t\t\t<Scrollbar style={{ width: width ? width : default_win_width, height: height? height : default_win_height}} className='Scrollbar'>\n      \t\t\t<ReactMarkdown components={{\n\t\t\t\t\tcode({node, inline, className, children, ...props}) {\n\t\t\t\t\t\tconst match = /language-(\\w+)/.exec(className || '')\n\t\t\t\t\t\treturn !inline && match ? (\n\t\t\t\t\t\t\t<SyntaxHighlighter\n\t\t\t\t\t\t\tchildren={String(children).replace(/\\n$/, '')}\n\t\t\t\t\t\t\t// @ts-ignore: next-line\n\t\t\t\t\t\t\tstyle={oneDark}\n\t\t\t\t\t\t\tlanguage={match[1]}\n\t\t\t\t\t\t\tPreTag=\"div\"\n\t\t\t\t\t\t\t{...props}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t<code className={className} {...props}>\n\t\t\t\t\t\t\t{children}\n\t\t\t\t\t\t</code>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tclassName=\"markdown\" rehypePlugins={[rehypeRaw]} remarkPlugins={[remarkGfm]} children={markdown}/>\n\t\t\t</Scrollbar>\n\t\t</div>\n\t)\n}\n\nexport default memo(File);"],"names":["File","name","content_path","spawnWindow","size","forcedUpdate","useState","markdown","setMarkdown","useEffect","fetch","then","response","text","width","document","getElementById","clientWidth","height","clientHeight","id","className","onClick","pdf_path","blob","fileURL","window","URL","createObjectURL","alink","createElement","href","download","click","xmlns","viewBox","strokeWidth","stroke","fill","strokeLinecap","strokeLinejoin","d","points","x1","y1","x2","y2","style","default_win_width","default_win_height","components","code","node","inline","children","props","match","exec","String","replace","oneDark","language","PreTag","rehypePlugins","rehypeRaw","remarkPlugins","remarkGfm","memo"],"sourceRoot":""}